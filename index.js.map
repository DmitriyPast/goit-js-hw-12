{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["// Для організації коду використовуй модульність та синтаксис export/import.\nimport axios from 'axios';\n\n// У файлі pixabay-api.js зберігай функції для виконання HTTP-запитів:\n\n// getImagesByQuery(query). Ця функція повинна приймати один параметр query (пошукове слово, яке є рядком), здійснювати HTTP-запит і повертати значення властивості data з отриманої відповіді.\nexport default function getImagesByQuery(query) {\n  return axios.get('https://pixabay.com/api/', {\n    params: {\n      key: '50866310-f6e992bbe1b9ca34c705df120',\n      q: query,\n      image_type: 'photo',\n      orientation: 'horizontal',\n      safesearch: true,\n    },\n  });\n}\n","// У файлі render-functions.js створи екземпляр SimpleLightbox для роботи з модальним вікном та зберігай функції для відображення елементів інтерфейсу:\n// Описаний в документації\nimport SimpleLightbox from 'simplelightbox';\n// Додатковий імпорт стилів <-- Жахлива підказка\n// import 'simplelightbox/dist/simple-lightbox.min.css'; <-- I HATE this\n\nconst gallery = document.querySelector('ul.gallery');\nconst loader = document.querySelector('span.loader');\n// createGallery(images). Ця функція повинна приймати масив images, створювати HTML-розмітку для галереї, додавати її в контейнер галереї та викликати метод екземпляра SimpleLightbox refresh(). Нічого не повертає.\nexport function createGallery(images) {\n  clearGallery();\n  //\n  // console.log(gallery);\n\n  gallery.innerHTML = images\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        preview = webformatURL,\n        original = largeImageURL,\n        description = tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => `<li class=\"gallery-item\">\n    <a class=\"gallery-link\" href=\"${original}\">\n      <img\n        class=\"gallery-image\"\n        src=\"${preview}\"\n        data-source=\"${original}\"\n        alt=\"${description}\"\n      />\n    </a>\n      <!--<div class=\"image-info\">\n      <span>likes: ${likes}</span>\n      <span>vievs: ${views}</span>\n      <span>comments: ${comments}</span>\n      <span\">downloads: ${downloads}</span>\n      </div>-->\n      <ul class=\"image-info\">\n        <li><h4>Likes</h4><p>${likes}</p></li>\n        <li><h4>Views</h4><p>${views}</p></li>\n        <li><h4>Comments</h4><p>${comments}</p></li>\n        <li><h4>Downloads</h4><p>${downloads}</p></li>\n      </ul>\n  </li>`\n    )\n    .join('');\n  // gallery.insertAdjacentHTML(\n  //   'afterbegin',\n  //   images\n  //     .map(\n  //       ({ preview, original, description }) => `<li class=\"gallery-item\">\n  //   <a class=\"gallery-link\" href=\"${original}\">\n  //     <img\n  //       class=\"gallery-image\"\n  //       src=\"${preview}\"\n  //       data-source=\"${original}\"\n  //       alt=\"${description}\"\n  //     />\n  //     fuck\n  //     <span>1</span>\n  //     <span>2</span>\n  //     <span>3</span>\n  //     <span>4</span>\n  //   </a>\n  // </li>`\n  //     )\n  //     .join('')\n  // );\n  const slb = new SimpleLightbox('.gallery a', {});\n  slb.refresh();\n}\n// clearGallery(). Ця функція нічого не приймає та повинна очищати вміст контейнера галереї. Нічого не повертає.\nexport function clearGallery() {\n  gallery.innerHTML = '';\n  //\n}\n\n// showLoader(). Ця функція нічого не приймає, повинна додавати клас для відображення лоадера. Нічого не повертає.\nexport function showLoader() {\n  // gallery.classList.add('.loading');\n  // loader.classList.add('.loader-show');\n  loader.classList.remove('hidden');\n}\n// hideLoader(). Ця функція нічого не приймає, повинна прибирати клас для відображення лоадера. Нічого не повертає.\nexport function hideLoader() {\n  // gallery.classList.remove('.loading');\n  // loader.classList.remove('.loader-show');\n  loader.classList.add('hidden');\n}\n","// У файлі main.js напиши всю логіку роботи додатка. Виклики нотифікацій iziToast, усі перевірки на довжину масиву в отриманій відповіді робимо саме в цьому файлі. Імпортуй в нього функції із файлів pixabay-api.js та render-functions.js та викликай їх у відповідний момент.\nimport fetchData from './js/pixabay-api';\nimport * as render from './js/render-functions';\n// Описаний у документації\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst form = document.querySelector('form.form');\nform.addEventListener('submit', search => {\n  search.preventDefault();\n  // console.log(search.target.elements[0].value);\n  if (search.target.elements[0].value) {\n    render.clearGallery();\n    render.showLoader();\n    fetchData(search.target.elements[0].value)\n      .then(res => {\n        // console.log(res);\n        render.hideLoader();\n        render.createGallery(res.data.hits);\n        if (!res.data.total)\n          throw new Error(\n            'Sorry, there are no images matching your search query. Please try again!'\n          );\n      })\n      .catch(err => {\n        // console.log(err);\n        iziToast.error({\n          // title: 'Error',\n          message: String(err),\n          position: 'topRight',\n        });\n      });\n    // iziToast.success({\n    //   message: 'sus',\n    //   position: 'topRight',\n    // });\n  } else\n    iziToast.error({\n      message: 'red',\n      position: 'topRight',\n    });\n});\n\n// const images = [\n//   {\n//     preview:\n//       'https://cdn.pixabay.com/photo/2019/05/14/16/43/rchids-4202820__480.jpg',\n//     original:\n//       'https://cdn.pixabay.com/photo/2019/05/14/16/43/rchids-4202820_1280.jpg',\n//     description: 'Hokkaido Flower',\n//   },\n//   {\n//     preview:\n//       'https://cdn.pixabay.com/photo/2019/05/14/22/05/container-4203677__340.jpg',\n//     original:\n//       'https://cdn.pixabay.com/photo/2019/05/14/22/05/container-4203677_1280.jpg',\n//     description: 'Container Haulage Freight',\n//   },\n//   {\n//     preview:\n//       'https://cdn.pixabay.com/photo/2019/05/16/09/47/beach-4206785__340.jpg',\n//     original:\n//       'https://cdn.pixabay.com/photo/2019/05/16/09/47/beach-4206785_1280.jpg',\n//     description: 'Aerial Beach View',\n//   },\n//   {\n//     preview:\n//       'https://cdn.pixabay.com/photo/2016/11/18/16/19/flowers-1835619__340.jpg',\n//     original:\n//       'https://cdn.pixabay.com/photo/2016/11/18/16/19/flowers-1835619_1280.jpg',\n//     description: 'Flower Blooms',\n//   },\n//   {\n//     preview:\n//       'https://cdn.pixabay.com/photo/2018/09/13/10/36/mountains-3674334__340.jpg',\n//     original:\n//       'https://cdn.pixabay.com/photo/2018/09/13/10/36/mountains-3674334_1280.jpg',\n//     description: 'Alpine Mountains',\n//   },\n//   {\n//     preview:\n//       'https://cdn.pixabay.com/photo/2019/05/16/23/04/landscape-4208571__340.jpg',\n//     original:\n//       'https://cdn.pixabay.com/photo/2019/05/16/23/04/landscape-4208571_1280.jpg',\n//     description: 'Mountain Lake Sailing',\n//   },\n//   {\n//     preview:\n//       'https://cdn.pixabay.com/photo/2019/05/17/09/27/the-alps-4209272__340.jpg',\n//     original:\n//       'https://cdn.pixabay.com/photo/2019/05/17/09/27/the-alps-4209272_1280.jpg',\n//     description: 'Alpine Spring Meadows',\n//   },\n//   {\n//     preview:\n//       'https://cdn.pixabay.com/photo/2019/05/16/21/10/landscape-4208255__340.jpg',\n//     original:\n//       'https://cdn.pixabay.com/photo/2019/05/16/21/10/landscape-4208255_1280.jpg',\n//     description: 'Nature Landscape',\n//   },\n//   {\n//     preview:\n//       'https://cdn.pixabay.com/photo/2019/05/17/04/35/lighthouse-4208843__340.jpg',\n//     original:\n//       'https://cdn.pixabay.com/photo/2019/05/17/04/35/lighthouse-4208843_1280.jpg',\n//     description: 'Lighthouse Coast Sea',\n//   },\n// ];\n\n// render.createGallery(images);\n"],"names":["getImagesByQuery","query","axios","gallery","loader","createGallery","images","clearGallery","webformatURL","largeImageURL","tags","preview","original","description","likes","views","comments","downloads","SimpleLightbox","showLoader","hideLoader","form","search","render.clearGallery","render.showLoader","fetchData","res","render.hideLoader","render.createGallery","err","iziToast"],"mappings":"owBAMe,SAASA,EAAiBC,EAAO,CAC9C,OAAOC,EAAM,IAAI,2BAA4B,CAC3C,OAAQ,CACN,IAAK,qCACL,EAAGD,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACb,CACL,CAAG,CACH,CCVA,MAAME,EAAU,SAAS,cAAc,YAAY,EAC7CC,EAAS,SAAS,cAAc,aAAa,EAE5C,SAASC,EAAcC,EAAQ,CACpCC,IAIAJ,EAAQ,UAAYG,EACjB,IACC,CAAC,CACC,aAAAE,EACA,cAAAC,EACA,KAAAC,EACA,QAAAC,EAAUH,EACV,SAAAI,EAAWH,EACX,YAAAI,EAAcH,EACd,MAAAI,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,IAAY;AAAA,oCACwBL,CAAQ;AAAA;AAAA;AAAA,eAG7BD,CAAO;AAAA,uBACCC,CAAQ;AAAA,eAChBC,CAAW;AAAA;AAAA;AAAA;AAAA,qBAILC,CAAK;AAAA,qBACLC,CAAK;AAAA,wBACFC,CAAQ;AAAA,0BACNC,CAAS;AAAA;AAAA;AAAA,+BAGJH,CAAK;AAAA,+BACLC,CAAK;AAAA,kCACFC,CAAQ;AAAA,mCACPC,CAAS;AAAA;AAAA,QAGvC,EACA,KAAK,EAAE,EAuBE,IAAIC,EAAe,aAAc,CAAE,CAAA,EAC3C,QAAO,CACb,CAEO,SAASX,GAAe,CAC7BJ,EAAQ,UAAY,EAEtB,CAGO,SAASgB,GAAa,CAG3Bf,EAAO,UAAU,OAAO,QAAQ,CAClC,CAEO,SAASgB,GAAa,CAG3BhB,EAAO,UAAU,IAAI,QAAQ,CAC/B,CCrFA,MAAMiB,EAAO,SAAS,cAAc,WAAW,EAC/CA,EAAK,iBAAiB,SAAUC,GAAU,CACxCA,EAAO,eAAc,EAEjBA,EAAO,OAAO,SAAS,CAAC,EAAE,OAC5BC,IACAC,IACAC,EAAUH,EAAO,OAAO,SAAS,CAAC,EAAE,KAAK,EACtC,KAAKI,GAAO,CAIX,GAFAC,IACAC,EAAqBF,EAAI,KAAK,IAAI,EAC9B,CAACA,EAAI,KAAK,MACZ,MAAM,IAAI,MACR,0EACZ,CACA,CAAO,EACA,MAAMG,GAAO,CAEZC,EAAS,MAAM,CAEb,QAAS,OAAOD,CAAG,EACnB,SAAU,UACpB,CAAS,CACT,CAAO,GAMHC,EAAS,MAAM,CACb,QAAS,MACT,SAAU,UAChB,CAAK,CACL,CAAC"}